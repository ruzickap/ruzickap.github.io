name: post_tests

on:
  # checkov:skip=CKV_GHA_7:The build output cannot be affected by user parameters other than the build entry point and the top-level source location. GitHub Actions workflow_dispatch inputs MUST be empty.
  workflow_dispatch:
    inputs:
      cluster_fqdn:
        description: Cluster FQDN
        default: "k01.k8s.mylabs.dev"
        type: string
      tags:
        description: Common tags
        default: "product_id='12345',used_for=dev,owner=petr.ruzicka@gmail.com"
        type: string
      posts:
        type: choice
        description: Select post
        default: cheapest-amazon-eks
        options:
          - cheapest-amazon-eks
          - amazon-eks-karpenter-tests cheapest-amazon-eks
          - trivy-operator-grafana cheapest-amazon-eks
          - velero-and-cert-manager cheapest-amazon-eks
          - secrets-store-csi-driver-reloader velero-and-cert-manager cheapest-amazon-eks
          - my-favourite-krew-plugins-kubectl cheapest-amazon-eks
          - cilium-amazon-eks
          - secure-cheap-amazon-eks
          - exploit-vulnerability-wordpress-plugin-kali-linux
      action:
        type: choice
        description: Select action
        default: build + destroy
        options:
          - build
          - destroy
          - build + destroy

env:
  AWS_DEFAULT_REGION: us-east-1
  AWS_ROLE_TO_ASSUME: ${{ secrets.AWS_ROLE_TO_ASSUME }}
  GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
  GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
  CLUSTER_FQDN: ${{ inputs.cluster_fqdn }}
  TAGS: ${{ inputs.tags }},cluster=${{ inputs.cluster_fqdn }}

permissions: read-all

jobs:
  post-pipeline:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    name: "${{ inputs.action }} | ${{ inputs.posts }} | ${{ inputs.cluster_fqdn }}"
    concurrency:
      group: post_tests-${{ inputs.cluster_fqdn }}
    timeout-minutes: 100
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 7000
          role-session-name: GitHubOidcFederatedRole
          aws-region: ${{ env.AWS_DEFAULT_REGION }}
          mask-aws-account-id: true

      - name: Check out repository code
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4

      - name: "${{ inputs.action }} | ${{ inputs.posts }} | ${{ inputs.cluster_fqdn }}"
        env:
          GH_TOKEN: ${{ github.token }}
          GH_ACTION: ${{ inputs.action }}
          GH_INPUTS: ${{ inputs.posts }}
        run: |
          set -euxo pipefail

          export TMP_DIR="${PWD}/mytmp"

          POST_FILES_ARRAY=()
          # shellcheck disable=SC2043
          for POST_FILE in ${GH_INPUTS}; do
            POST_FILES_ARRAY+=("$(find _posts -type f -name "*${POST_FILE}*.md")")
          done

          if grep -q eksctl "${POST_FILES_ARRAY[@]}" && ! command -v eksctl &> /dev/null ; then
            echo "*** Installing eksctl"
            gh release download --repo weaveworks/eksctl --pattern eksctl_Linux_amd64.tar.gz --output - | sudo tar xz -C /usr/local/bin/
            eksctl version
          fi

          if grep -q cilium "${POST_FILES_ARRAY[@]}" && ! command -v cilium &> /dev/null ; then
            echo "*** Installing cilium"
            gh release download --repo cilium/cilium-cli --pattern cilium-linux-amd64.tar.gz --output - | sudo tar xz -C /usr/local/bin/
            cilium version --client
          fi

          if grep -q velero "${POST_FILES_ARRAY[@]}" && ! command -v velero &> /dev/null ; then
            echo "*** Installing velero"
            gh release download --repo vmware-tanzu/velero --pattern "velero-*-linux-amd64.tar.gz" --output - | sudo tar xz -C /usr/local/bin/ --strip-components 1 --wildcards "*/velero"
            velero version --client-only
          fi

          if [[ "${GH_ACTION}" =~ 'build' ]]; then
            echo -e "********************\n*** Create\n********************"
            for (( idx=${#POST_FILES_ARRAY[@]}-1 ; idx>=0 ; idx-- )); do
              echo "*** ${POST_FILES_ARRAY[idx]} | build"
              # shellcheck disable=SC1090
              source <(echo "set -euxo pipefail" ; sed -n "/^\s*\`\`\`bash$/,/^\s*\`\`\`$/p" "${POST_FILES_ARRAY[idx]}" | sed 's/^\s*```*//')
              if [[ "${POST_FILES_ARRAY[*]}" =~ eks && ${idx} -eq ${#POST_FILES_ARRAY[@]}-1 ]]; then
                (
                  echo "<https://${CLUSTER_FQDN}>"
                  echo '```'
                  # shellcheck disable=SC2028
                  echo "eval \"\$(aws sts assume-role --role-arn \"\${AWS_ROLE_TO_ASSUME}\" --role-session-name \"\$USER@\$(hostname -f)-k8s-\$(date +%s)\" --duration-seconds 36000 | jq -r '.Credentials | \"export AWS_ACCESS_KEY_ID=\(.AccessKeyId)\\nexport AWS_SECRET_ACCESS_KEY=\(.SecretAccessKey)\\nexport AWS_SESSION_TOKEN=\(.SessionToken)\\n\"')\""
                  echo "export KUBECONFIG=\"/tmp/kubeconfig-${CLUSTER_NAME}.conf\""
                  echo "aws eks update-kubeconfig --region \"${AWS_DEFAULT_REGION}\" --name \"${CLUSTER_NAME}\" --kubeconfig \"\$KUBECONFIG\""
                  echo '```'
                ) | tee -a "${GITHUB_STEP_SUMMARY}"
              fi
            done
          fi

          if [[ "${GH_ACTION}" =~ 'destroy' ]]; then
            echo -e "********************\n*** Destroy\n********************"
            export AWS_DEFAULT_REGION="${AWS_DEFAULT_REGION:-us-east-1}"
            export CLUSTER_FQDN="${CLUSTER_FQDN:-k01.k8s.mylabs.dev}"
            export CLUSTER_NAME="${CLUSTER_FQDN%%.*}"
            export TMP_DIR="${TMP_DIR:-${PWD}}"
            if eksctl get clusters --name="${CLUSTER_NAME}" &> /dev/null; then
              export KUBECONFIG="${TMP_DIR}/${CLUSTER_FQDN}/kubeconfig-${CLUSTER_NAME}.conf"
              aws eks update-kubeconfig --region "${AWS_DEFAULT_REGION}" --name "${CLUSTER_NAME}" --kubeconfig "${KUBECONFIG}" || true
            fi

            for POST_FILE in "${POST_FILES_ARRAY[@]}"; do
              echo "*** ${POST_FILE} | destroy"
              # shellcheck disable=SC1090
              source <(echo "set -euxo pipefail" ; sed -n "/^\`\`\`sh$/,/^\`\`\`$/p" "${POST_FILE}" | sed "/^\`\`\`*/d") || true
            done
          fi
